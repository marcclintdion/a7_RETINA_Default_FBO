#import <OpenGLES/ES2/gl.h>
#import <OpenGLES/ES2/glext.h>


//--------------------------------------------------------------------------------------------------------------
#define BUFFER_OFFSET(i) ((char *)0 + (i))
//----------------------------------------------------------------------------------------


GLfloat   modelView[16];
GLfloat   projection[16];
GLfloat   mvpMatrix[16];
GLfloat   mvpMatrixInverse[16];
GLfloat   lightMatrix[16];
GLfloat   moveSetMatrix[16];
GLfloat   ProjectionShadow[16];
GLfloat   modelViewShadow[16];
GLfloat   viewMatrix[16];

GLfloat   LightModelViewMatrix[16];


GLfloat   modelWorld[16];
GLfloat   LightView[16];
GLfloat   LightProjection[16];
GLfloat   modelViewInverse[16];

GLfloat   tempMatrix[16];

GLfloat   textureMatrix[16] = { 0.5f, 0.0f, 0.0f, 0.0f,
                                0.0f, 0.5f, 0.0f, 0.0f,
                                0.0f, 0.0f, 0.5f, 0.0f,
                                0.5f, 0.5f, 0.5f, 1.0f };

GLfloat   inverseMatrix[16];

GLsizei   viewWidth;
GLsizei   viewHeight;


//====================================================================================  

#include <math.h>
#include "MATRIX_MATH.cpp"

//==================================================================================================================================================
//--------------------------------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------------------------------
//==================================================================================================================================================

      
                                                #include "GLOBALS.cpp"
                                                
                                                //====================================================================================  
                                                #include "_SHADERS/wood/goldenSunset/goldenSunset_SHADER_GLOBALS.cpp"
                                                //====================================================================================  
                                                #include "_MODEL_FOLDERS_/sphere/sphere_GLOBALS.cpp"
                                                //====================================================================================



//==================================================================================================================================================
//--------------------------------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------------------------------
//==================================================================================================================================================

GLfloat shaderNumber = 0;

void SelectShader(GLfloat shaderNumber)
{
        
        //--------------------------------------------------------------------------------------
        if(shaderNumber == 26)
        {
                //#include "_SHADERS/plastic/rubber/rubber_SHADER_RENDER.cpp"
        }
        //--------------------------------------------------------------------------------------
        if(shaderNumber == 44)
        {
                //#include "_SHADERS/ConeStep_01/steepPointy_SHADER_RENDER.cpp"
        }
        //--------------------------------------------------------------------------------------
        if(shaderNumber == 45)
        {
                //#include "_SHADERS/ConeStep_01/shallowRound_SHADER_RENDER.cpp"
        }
        //--------------------------------------------------------------------------------------
        if(shaderNumber == 46)
        {
                #include "_SHADERS/wood/goldenSunset/goldenSunset_SHADER_RENDER.cpp"
        }
        //--------------------------------------------------------------------------------------
        if(shaderNumber == 47)
        {
                //#include "_SHADERS/SHADOWS/shadow_32bit_Stride_SHADER_RENDER.cpp"
        }
        //--------------------------------------------------------------------------------------
        if(shaderNumber == 48)
        {
                //#include "_SHADERS/SHADOWS/shadow_44bit_Stride_SHADER_RENDER.cpp"
        }
        //--------------------------------------------------------------------------------------
        if(shaderNumber == 49)
        {
                //#include "_SHADERS/marble/geod_A/geod_A_SHADER_RENDER.cpp"
        }
        //--------------------------------------------------------------------------------------
        if(shaderNumber == 50)
        {
                //#include "_SHADERS/leaves/A/leaves_A_SHADER_RENDER.cpp"
        }
        //--------------------------------------------------------------------------------------
        if(shaderNumber == 51)
        {
                //#include "_SHADERS/plastic/hardShinyBumpPlastic/hardShinyBumpPlastic_SHADER_RENDER.cpp"
        }    
        //--------------------------------------------------------------------------------------
        
        
}

//==================================================================================================================================================
//--------------------------------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------------------------------
//==================================================================================================================================================

void InitGL(void)
{
        
        glBlendFunc(GL_ONE, GL_ONE_MINUS_SRC_ALPHA);
        glDisable(GL_BLEND);
        
        
     
        //=====================================================================================================
        #include "_SHADERS/wood/goldenSunset/goldenSunset_SHADER_Init.cpp"
        //====================================================================================
        #include "_MODEL_FOLDERS_/sphere/sphere_Init.cpp"
        //====================================================================================        

}

//==================================================================================================================================================
//--------------------------------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------------------------------
//==================================================================================================================================================

void RenderGL(void)
{
        glClearColor(0.0, 0.0, 0.0, 0.5);
        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
        
        glViewport(0, 0, viewWidth, viewHeight);
        LoadIdentity(projection);
        PerspectiveMatrix(projection, fieldOfView, (GLfloat)viewWidth / (GLfloat)viewHeight, adjustNearFar[0],  adjustNearFar[1]);        
        //Rotate(projection, 0.0, 0.0, 1.0, 90.0);//_____FOR_iOS_LANDSCAPE_VIEW 

        //====================================================================================
        
        shaderNumber = 46;
        #include "_MODEL_FOLDERS_/sphere/sphere_RENDER.cpp"
        
        //====================================================================================  
}

//==================================================================================================================================================
//--------------------------------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------------------------------
//==================================================================================================================================================

void ShutDownGL(void)
{

}














